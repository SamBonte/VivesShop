@model IList<Product>
@{
    ViewData["Title"] = "Home Page";
}
<div class="text-center">
    <!--Container-->
    <div class="row mt-4">
        <div class="col-md-6">
            <h2>Shop Items</h2>
            <div class="row">
                <ul class="list-group">
                    @foreach (var product in Model)
                    {
                        <div>
                            <partial name="ProductPartial" model="product"/>
                        </div>
                    }
                </ul>
            </div>
        </div>
        <div class="col-md-6">
            <h2>Shopping cart</h2>
            <ul class="list-group" id="shopping-cart">
                
            </ul>
            <div class="mt-3">
                <h3>Total: € <span id="total">0</span></h3>
                <button class="btn btn-success" onclick="checkout()">Checkout</button>
            </div>
        </div>
    </div>
</div>
@section Scripts
{
    <script>
        let cart = [];
        let total = 0;

        // Toevoegen item winkelwagen
         const addToCart = (itemName, price) => {
            
            cart.push({ name: itemName, price: price });
            total += price;
            updateCart();
        };

        // Verwijderen item uit winkelwagen
        const removeFromCart = (index) => {
            total -= cart[index].price;
            cart.splice(index, 1);
            updateCart();
        };

        // Bijwerken winkelwagen
            function updateCart() {
            const cartElement = document.getElementById('shopping-cart');
            const totalElement = document.getElementById('total');
            cartElement.innerHTML = '';
            cart.forEach((item, index) => {
                const listItem = document.createElement('li');
                listItem.className = 'list-group-item bg-warning text-dark';
                listItem.innerHTML = `${item.name} (€ ${item.price.toFixed(1)})
                    <button class="btn btn-danger btn-sm float-right" onclick="removeFromCart(${index})">-</button>`;
                cartElement.appendChild(listItem);
            });
            totalElement.textContent = total.toFixed(1);
        };

        // Berkenen totaalbedrag
        const checkout = () => {
            if (cart.length === 0) {
                alert("Your cart is empty!");
                return;
            }
            alert("Checkout successful!");
            cart = [];
            total = 0;
            updateCart();
        };
    </script>
}